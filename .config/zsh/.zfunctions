#
# ~/.zfunctions
#

# load de funções do zsh
autoload -U zcalc
autoload -Uz tetriscurses

calculadora() {
	zcalc -f -e "$*"
}

# Make dir and cd into it
mkcd() {
    mkdir -p "$1"
    cd "$1"
}

# cd and ls into dir
cl() {
	local dir="$1"
	local dir="${dir:=$HOME}"
	if [[ -d "$dir" ]]; then
		cd "$dir" >/dev/null; ls
	else
		echo "cl: $dir: Directory not found"
	fi
}

# Extract compressed files
extract() {
    local c e i

    (($#)) || return

    for i; do
        c=''
        e=1

        if [[ ! -r $i ]]; then
            echo "$0: file is unreadable: \`$i'" >&2
            continue
        fi

        case $i in
            *.t@(gz|lz|xz|b@(2|z?(2))|a@(z|r?(.@(Z|bz?(2)|gz|lzma|xz)))))
                   c=(bsdtar xvf);;
            *.7z)  c=(7z x);;
            *.Z)   c=(uncompress);;
            *.bz2) c=(bunzip2);;
            *.exe) c=(cabextract);;
            *.gz)  c=(gunzip);;
            *.rar) c=(unrar x);;
            *.xz)  c=(unxz);;
            *.zip) c=(unzip);;
            *)     echo "$0: unrecognized file extension: \`$i'" >&2
                   continue;;
        esac

        command "${c[@]}" "$i"
        ((e = e || $?))
    done
    return "$e"
}

livro() {
    # Configura ueberzug para fzf se disponível
    if command -v ueberzug >/dev/null 2>&1; then
        export FIFO_UEBERZUG="/tmp/fzf-ueberzug-fifo"
        [ -p "$FIFO_UEBERZUG" ] || mkfifo "$FIFO_UEBERZUG"
        ueberzug layer --silent --parser json < "$FIFO_UEBERZUG" &
        UEBERZUG_PID=$!
        # Limpa ueberzug ao sair
        trap 'kill $UEBERZUG_PID 2>/dev/null' EXIT
    fi
    
    # Busca arquivos com fd e exibe preview com fzf
    local arquivo
    arquivo=$(fd -e pdf -e epub . ~/documents/livros | fzf --preview '~/.local/bin/preview {}' --preview-window=right:40%:wrap)
    
    # Mata o processo ueberzug se estiver rodando
    [ -n "$UEBERZUG_PID" ] && kill $UEBERZUG_PID 2>/dev/null
    
    # Abre o arquivo selecionado com zathura
    if [[ -n "$arquivo" ]]; then
        swallow zathura "$arquivo"
    fi
}

# Use lf to switch directories and bind it to ctrl-o
lfcd () {
    tmp="$(mktemp -uq)"
    trap 'rm -f $tmp >/dev/null 2>&1 && trap - HUP INT QUIT TERM PWR EXIT' HUP INT QUIT TERM PWR EXIT
    lfub -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}
bindkey -s '^o' '^ulfcd\n'

